
#########################################################
#	public static void printVertical(int n){	#
#		if (n > 0){				#
#			printVertical(n / 10);		#
#			System.out.println(n % 10);	#
#		}					#
#	}						#
#########################################################




	.globl MAX
	.globl SIZE
	.globl div4
	.globl gcd
#-----------------------------
	.data
	MAX:	 .word 2147483647;
	SIZE:	 .byte 32;
	count:	 .word 0
#-----------------------------
		.globl getCount
		.globl setCount
		.globl signum
		.globl isPrime
		.globl isFactor
		.globl printVertical
#----------------------------------------
	.text
#----------------------------------------
main:
	addi	$v0, $0, 5
	syscall
	add 	$a0, $0, $v0
	addi	$t1, $0, 500 
	sge	$t2, $a0, $t1
	beq	$t2, $0, skip
	
	#-----------------------------------------------------------
		sw	$ra, 0($sp)
		addi	$sp, $sp, -4	#push ra
	#-----------------------------------------------------------

	jal div4

	add	$a0, $0, $v0					
	addi    $v0, $0, 1		
	syscall				
	addi    $a0, $0, 10		
	addi    $v0, $0, 11		
	syscall	 

	#------------------------------------------------------------
		addi	$sp, $sp, 4
		lw	$ra, 0($sp)	#pop ra
	#------------------------------------------------------------

	jr $ra

skip:	
	addi $a1, $0, 350
	add	$t8, $0, $0
	
	#-----------------------------------------------------------
		sw	$ra, 0($sp)
		addi	$sp, $sp, -4	#push ra
	#-----------------------------------------------------------

	jal gcd
	
	add	$a0, $0, $v0					
	addi    $v0, $0, 1		
	syscall				
	addi    $a0, $0, 10		
	addi    $v0, $0, 11		
	syscall	 

	#------------------------------------------------------------
		addi	$sp, $sp, 4
		lw	$ra, 0($sp)	#pop ra
	#------------------------------------------------------------
	

#----------------------------------------
div4:
	add 	$t3, $0, $0	# result =0
	andi	$t4, $a0, 3	
	beq 	$t4, $0, goto
	add 	$v0, $0, $t3
	jr $ra
goto:
	addi	$t3, $0, 1
	add 	$v0, $0, $t3
	jr $ra
#----------------------------------------
gcd:
	add $t2, $0, $0
	beq $a1, $0, go
	add $t3, $0, $a0
	jr $ra
go:	
	add $t6, $0, $a0
	div $t6, $a1
	mfhi	$t5
	add $a1, $0, $t5
	add $a0, $0, $t6
	#-----------------------------------------------------------
		sw	$ra, 0($sp)
		addi	$sp, $sp, -4	#push ra
	#-----------------------------------------------------------

	jal 	gcd

	#-----------------------------------------------------------
		sw	$ra, 0($sp)
		addi	$sp, $sp, -4	#push ra
	#-----------------------------------------------------------

	add $v0, $0, $t2

	jr $ra
